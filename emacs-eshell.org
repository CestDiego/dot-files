#+TITLE:  Emacs EShell Parameters
#+AUTHOR: Howard Abrams
#+EMAIL:  howard.abrams@gmail.com
#+DATE:   [2014-02-27 Thu]
#+TAGS:   emacs

My frustration with shells makes me enjoy Emacs Shell.

* Stack the Buffer

    One of the few things I miss about ZShell is the ability to easily
    save off a half-finished command for later invocation. I now have
    =M-q= functionality:

#+BEGIN_SRC elisp
  (require 'esh-buf-stack)
  (setup-eshell-buf-stack)
  (add-hook 'eshell-mode-hook
            (lambda () (local-set-key (kbd "M-q") 'eshell-push-command)))
#+END_SRC

* Ignoring Directories

   Great shell with some good tweaks taken from [[https://github.com/eschulte/emacs24-starter-kit/blob/master/starter-kit-eshell.org][the Starter Kit]]
   project. Ignoring the =.git= directories seem like a good idea.

#+BEGIN_SRC elisp
  (setq eshell-cmpl-cycle-completions nil
        eshell-save-history-on-exit t
        eshell-cmpl-dir-ignore "\\`\\(\\.\\.?\\|CVS\\|\\.svn\\|\\.git\\)/\\'")
#+END_SRC

* Visual Executables

   Eshell would get somewhat confused if I ran the following commands
   directly through the normal Elisp library, as these need the better
   handling of ansiterm:

#+BEGIN_SRC elisp
  (add-hook 'eshell-mode-hook
     '(lambda nil
        (add-to-list 'eshell-visual-commands "ssh")
        (add-to-list 'eshell-visual-commands "tail")))
#+END_SRC

* Set up the Correct Path

   Need the correct PATH even if we start Emacs from the GUI:

#+BEGIN_SRC elisp
  (setenv "PATH"
          (concat
           "/usr/local/bin:/usr/local/sbin:"
           (getenv "PATH")))
#+END_SRC

* Pager Setup

   If any program wants to pause the output through the =$PAGER=
   variable, well, we don't really need that:

#+BEGIN_SRC elisp
  (setenv "PAGER" "cat")
#+END_SRC

* Aliases

   Gotta have some [[http://www.emacswiki.org/emacs/EshellAlias][shell aliases]], right?

#+BEGIN_SRC elisp
  (defalias 'e 'find-file)
  (defalias 'emacs 'find-file)
#+END_SRC

   Replacing the window with the new buffer may not be what I want.

#+BEGIN_SRC elisp
  (defalias 'ee 'find-file-other-window)
#+END_SRC

   Pull up dired, but without parameters, just use the current directory.

#+BEGIN_SRC elisp
  (defun eshell/d (&rest args)
    (dired (pop args) "."))
#+END_SRC

   Some of my favorite bash aliases, can be even more helpful in
   Eshell.

   However, my =gst= command should be an alias to =magit-status=, but
   using the =alias= doesn't pull in the current working directory, so
   I make it a function, instead:

#+BEGIN_SRC elisp
  (defun eshell/gst (&rest args)
      (magit-status (pop args) nil))

  (defun eshell/l (&rest args)
      (dired (pop args) nil))
#+END_SRC

* Shell Here

  If I make an alias that closes a window easily, I can have a quick
  "x" alias that quickly exits and [[file:emacs.org::*Macintosh][closes the window]].

#+BEGIN_SRC elisp
  (defun eshell/x (&rest args)
    (delete-single-window))
#+END_SRC

  Now making little Shells whenever I need them makes sense:

#+BEGIN_SRC elisp
  (defun eshell-here ()
    "Opens up a new shell in the directory associated with the current buffer's file."
    (interactive)
    (let* ((parent (file-name-directory (buffer-file-name)))
           (name   (car
                    (last
                     (split-string parent "/" t)))))
      (split-window-vertically)
      (other-window 1)
      (eshell "new")
      (rename-buffer (concat "*eshell: " name "*"))

      (insert (concat "ls"))
      (eshell-send-input)))

  (global-set-key (kbd "C-!") 'eshell-here)
#+END_SRC

* Technical Artifacts

  Make sure that we can simply =require= this library.

#+BEGIN_SRC elisp
  (provide 'init-eshell)
#+END_SRC

  Before you can build this on a new system, make sure that you put
  the cursor over any of these properties, and hit: =C-c C-c=

#+DESCRIPTION: A literate programming version of my Emacs Initialization of Eshell
#+PROPERTY:    results silent
#+PROPERTY:    tangle ~/.emacs.d/elisp/init-eshell.el
#+PROPERTY:    eval no-export
#+PROPERTY:    comments org
#+OPTIONS:     num:nil toc:nil todo:nil tasks:nil tags:nil
#+OPTIONS:     skip:nil author:nil email:nil creator:nil timestamp:nil
#+INFOJS_OPT:  view:nil toc:nil ltoc:t mouse:underline buttons:0 path:http://orgmode.org/org-info.js
