#+TITLE:     Emacs Initialization File
#+AUTHOR:    Howard Abrams
#+EMAIL:     howard.abrams@gmail.com
#+DATE:      2013-03-21 Thu

Loading this file will bring a clean Emacs instance up to a point
where all the supporting packages it needs are installed and ready.

To use it simply =M-x= this: =load-library ~/.emacs.d/init.el=

This can be done after this file has been tangled: =C-c C-v t=

#+BEGIN_SRC elisp
;; NB! This file was generated, so don't edit the .el file.
;;     Instead, edit and tangle the original org-mode file at
;;     ~/Dropbox/dot-files/emacs-init.org
#+END_SRC

* Packages

  Using the standard package library that comes with v24:

#+BEGIN_SRC elisp
  (require 'package)
#+END_SRC

** Repository Setup

   The packages I like come from many sources, and this lists these
   repository locations:

#+NAME: repositories
#+BEGIN_SRC elisp
  (setq package-archives '(("org"       . "http://orgmode.org/elpa/")
                           ("gnu"       . "http://elpa.gnu.org/packages/")
                           ("melpa"     . "http://melpa.milkbox.net/packages/")
                           ("tromey"    . "http://tromey.com/elpa/")
                           ("marmalade" . "http://marmalade-repo.org/packages/")))
#+END_SRC

   Before we can load new packages, we need to get the list of
   available packages:

#+NAME: initialize
#+BEGIN_SRC elisp
  (package-initialize)
  
  (when (not package-archive-contents)
    (package-refresh-contents))
#+END_SRC

** Package Selection

   Now we can grab anything we like!

#+BEGIN_SRC elisp
  (defvar my-packages '(
                        ac-nrepl
                        auto-complete
                        clojure-mode
                        clojurescript-mode
                        coffee-mode
                        color-theme
                        color-theme-sanityinc-tomorrow
                        dired-details
                        elein
                        emmet-mode
                        flymake
                        flymake-jshint
                        flyspell
                        git-commit-mode
                        gitconfig-mode
                        gitignore-mode
                        graphviz-dot-mode
                        handlebars-mode
                        htmlize

                        ;; JavaScript
                        js-comint
                        js2-mode
                        ac-js2
                        js2-refactor
                        dash
                        multiple-cursors
                        expand-region
                        json-mode

                        mac-key-mode
                        magit
                        markdown-mode
                        mustache-mode
                        nlinum
                        nrepl
                        nrepl-ritz          ;; For debugging Clojure
                        org
                        org-mime
                        org-presie
                        paredit
                        plantuml-mode
                        projectile          ;; For dealing with projects

                        ;; Python packages
                        flymake-python-pyflakes
                        nose
                        jedi
                        EPA

                        rainbow-delimiters  ;; Mode for alternating paren colors
                        ;; redo+            ;; If not installed, edit mac-key-mode
                        scala-mode
                        smex
                        undo-tree
                        web-mode
                        yasnippet
                        )
    "A list of packages to ensure are installed at launch.")
#+END_SRC

*** Mac Key Mode and Undo Tree

    The =redo+= module is now broken, and doesn't seem to be supported
    much. The =undo-tree= seems to be a better approach, however,
    =mac-key-mode= directly depends on it. Follow these commands to fix.

    1. Load mac-key-mode.el and comment: =(require 'redo+)=
    2. Comment out the key bindings (line 115) as we will reset Command-Z to =undo-tree= in the .emacs file.
    3. Fix the menu items (line 198):
       - Change ='redo= to ='undo-tree-redo=
       - Change ='undo= to ='undo-tree-undo=

** Package Installation

   Installs all packages specified.
   This is /idempotent/ in that we can call this anytime to install
   anything not already installed.

#+BEGIN_SRC elisp
  (unless package-archive-contents
    (package-refresh-contents))
  (dolist (package my-packages)
    (unless (package-installed-p package)
      (ignore-errors
        (package-install package))))
#+END_SRC
   
* External Dependencies

*** PlantUML

    The [[http://plantuml.sourceforge.net][PlantUML project]] allows you to draw UML diagrams with textual descriptions.
    A sweet feature for literate programmers. Download [[http://plantuml.sourceforge.net/download.html][the Jar file]] and put it in
    your =bin= directory:

#+BEGIN_EXAMPLE
  curl -o ~/bin/plantuml.jar http://sourceforge.net/projects/plantuml/files/plantuml.jar/download
#+END_EXAMPLE

*** Org-Mode Installation

    The [[http://orgmode.org][org-mode]] program is so critical, that I want a version > 7.9.
    Download a version and un-pack it in =~/.emacs.d= and create a
    symlink to it called: =~/.emacs.d/org=

    From this point, we expect this it to be in this spot.

*** Ensime Installation

    [[https://github.com/aemoncannon/ensime][Ensime]] is an enhanced mode for Scala. Complete instructions are
    on the github page, but it amounts to 

    - [[https://github.com/aemoncannon/ensime/downloads][Download a distribution]]
    - Positioning: =cd ~/.emacs=
    - Extracting: =tar xvf ~/Downloads/ensime_2.9.2-0.9.8.1.tar= (or equivalent)
    - Symlinking: =ln -s ensime_2.9.2-0.9.8.1 ensime=

    That should do 'er.

**** Checking out the Ensime Source Code

     You could check out the ensime source code and compiling a
     version. As long as we have a =~/.emacs.d/ensime/elisp= that we
     can load, we are golden...

#+BEGIN_EXAMPLE
  cd ~/Other # or whatever
  git clone https://github.com/aemoncannon/ensime.git
  cd ~/.emacs.d
  ln -s ~/Other/ensime/dist_2.9.2/elisp ensime
#+END_EXAMPLE

*** JavaScript

    Assuming that you have [[http://nodejs.org][node.js]] installed, you should install
    [[http://www.jshint.com][jshint]] as a global command:

#+BEGIN_EXAMPLE
  sudo npm -g install jshint
#+END_EXAMPLE

    Now you can customize the [[*JavaScript][JavaScript]] section.

*** Python

    The following should be installed globally (as opposed to within
    a virtual environment):

    - Real Python (from the [[http://python.org/download/][official website]])
    - Use that to build =easy_install=:
      wget https://bitbucket.org/pypa/setuptools/raw/0.8/ez_setup.py -O - | sudo python
    - Use that =easy_install= to get =pip=:
      sudo /Library/Frameworks/Python.framework/Versions/2.7/bin/easy_install pip
    - Install the following modules:
      - sudo pip install jedi
      - sudo pip install epc
      - sudo pip install pyflakes

*** ISpell

    The spelling feature in Emacs using =ispell=, so this should be
    installed with something like Homebrew:

#+BEGIN_SRC sh :tangle no
  brew install ispell
#+END_SRC

*** Support for GMAIL

    While reading email in Emacs is generally "fine", I like to use
    it because I can create direct links between my notes and the
    mail messages I get.

    To send email through Gmail, you'll need the TLS package
    installed. Using [[http://mxcl.github.com/homebrew/][Homebrew]] is simple enough:

#+BEGIN_SRC sh :tangle no
  brew install gnutls
#+END_SRC

* Later Updates

  Evaluate the following code to install new packages quickly:

#+BEGIN_SRC elisp :noweb yes :tangle no
<<repositories>>
<<initialize>>
(package-refresh-contents)
(package-list-packages)
#+END_SRC
* Technical Artifacts

  Before you can build this on a new system, make sure that you put
  the cursor over any of these properties, and hit: =C-c C-c=

#+DESCRIPTION: File to be run once with a fresh Emacs instance
#+PROPERTY:    results silent
#+PROPERTY:    tangle ~/.emacs.d/init.el
#+PROPERTY:    eval no-export
#+PROPERTY:    comments org
#+OPTIONS:     num:nil toc:nil todo:nil tasks:nil tags:nil
#+OPTIONS:     skip:nil author:nil email:nil creator:nil timestamp:nil
#+INFOJS_OPT:  view:nil toc:nil ltoc:t mouse:underline buttons:0 path:http://orgmode.org/org-info.js
