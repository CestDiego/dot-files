#+TITLE:  F2 Keybindings for Emacs
#+AUTHOR: Howard
#+EMAIL:  howard.abrams@gmail.com
#+DATE:   2015 Jan 04
#+TAGS:   technical emacs

The *F2* is used to enter odd characters not normally available or
phrases I want to type a bit too often.

* Unicode Characters

  Some of my frequently used Unicode characters:

#+BEGIN_SRC elisp
  (define-key f2-global-map (kbd "<up>") "↑")
  (define-key f2-global-map (kbd "<down>") "↓")
  (define-key f2-global-map (kbd "<left>") "←")
  (define-key f2-global-map (kbd "<right>") "→")
  (define-key f2-global-map (kbd "S-<up>") "⇑")
  (define-key f2-global-map (kbd "S-<down>") "⇓")
  (define-key f2-global-map (kbd "S-<left>") "⇐")
  (define-key f2-global-map (kbd "S-<right>") "⇒")

  (define-key f2-global-map (kbd "!") "¹")
  (define-key f2-global-map (kbd "@") "²")
  (define-key f2-global-map (kbd "#") "³")
  (define-key f2-global-map (kbd "$") "⁴")

  (define-key f2-global-map (kbd "2") "½")
  (define-key f2-global-map (kbd "3") "⅓")
  (define-key f2-global-map (kbd "4") "¼")

  (define-key f2-global-map (kbd "'") "’")
  (define-key f2-global-map (kbd "\"") "‘")

  (define-key f2-global-map (kbd "8") "•")
  (define-key f2-global-map (kbd "*") "°")
  (define-key f2-global-map (kbd "-") "—")
  (define-key f2-global-map (kbd ".") "…")
  (define-key f2-global-map (kbd ";") "😉")
  (define-key f2-global-map (kbd ")") "☺")

  (define-key f2-global-map (kbd "e") "𝑒")
  (define-key f2-global-map (kbd "f") "𝑓")
  (define-key f2-global-map (kbd "x") "𝑥")
  (define-key f2-global-map (kbd "y") "𝑦")
  (define-key f2-global-map (kbd "A") "α")
  (define-key f2-global-map (kbd "B") "β")
  (define-key f2-global-map (kbd "E") "ε")
  (define-key f2-global-map (kbd "L") "λ")
  (define-key f2-global-map (kbd "P") "π")
  (define-key f2-global-map (kbd "M") "μ")
  (define-key f2-global-map (kbd "T") "θ")
#+END_SRC

* Math Symbols

  I really don’t type that much math, but in trying to translate some
  mathematically-minded papers, I realize that I could use a few:

  #+BEGIN_SRC elisp
  (define-key f2-global-map (kbd "=") "≡")
  (define-key f2-global-map (kbd ":") "≔")
  (define-key f2-global-map (kbd "~") "≝")
  #+END_SRC

  Most math, however, should be based on the meta prefix:

  #+BEGIN_SRC elisp
  (define-key f2-global-map (kbd "M-.") "∴")  ; Therefore
  (define-key f2-global-map (kbd "M-,") "∵")  ; Therefore
  (define-key f2-global-map (kbd "M-t") "⊢")  ; Turnstile ... to assert
  (define-key f2-global-map (kbd "M-T") "≜")  ; Should be a triangle over equal sign
  (define-key f2-global-map (kbd "M-n") "∅")  ; Empty Set
  (define-key f2-global-map (kbd "M-e") "∃")  ; There exists
  (define-key f2-global-map (kbd "M-E") "∄")  ; There does not exist
  (define-key f2-global-map (kbd "M-i") "∩")  ; Intersection
  (define-key f2-global-map (kbd "M-u") "∪")  ; Union
  (define-key f2-global-map (kbd "M-6") "⋀")  ; Conjunction
  (define-key f2-global-map (kbd "M-^") "⋁")  ; Disjunction
  (define-key f2-global-map (kbd "M-*") "✕")  ; Multiply
  (define-key f2-global-map (kbd "M-/") "÷")  ; Divide
  (define-key f2-global-map (kbd "M-!") "¬")  ; Logical Not
  #+END_SRC

* Favorite Phrases

  What do I really need to enter that often that auto-completion
  doesn’t immediately solve?

  #+BEGIN_SRC elisp
    (define-key f2-global-map (kbd "H") "Howard Abrams")
  #+END_SRC

* Technical Artifacts

  Make sure that we can simply =require= this library.

#+BEGIN_SRC elisp
  (provide 'init-f2)
#+END_SRC

  Before you can build this on a new system, make sure that you put
  the cursor over any of these properties, and hit: =C-c C-c=

#+DESCRIPTION: A literate programming version of my Emacs Initialization for Graphical Clients
#+PROPERTY:    results silent
#+PROPERTY:    tangle ~/.emacs.d/elisp/init-f2.el
#+PROPERTY:    eval no-export
#+PROPERTY:    comments org
#+OPTIONS:     num:nil toc:nil todo:nil tasks:nil tags:nil
#+OPTIONS:     skip:nil author:nil email:nil creator:nil timestamp:nil
#+INFOJS_OPT:  view:nil toc:nil ltoc:t mouse:underline buttons:0 path:http://orgmode.org/org-info.js
